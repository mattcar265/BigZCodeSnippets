{% raw %}
<style>
    .waveformPreviews__Demo {
        margin-top: 50px;
        margin-bottom: 50px;
        transform: scale(1.1);
        background: transparent;
        display: flex;
        align-items: center;
        justify-content: center;
        -webkit-user-select: none;  /* WebKit/Blink Browsers */
        -moz-user-select: none;     /* Mozilla Browsers */
        -ms-user-select: none;      /* Internet Explorer/Edge Browsers */
        user-select: none; 
    }
    .waveforms__Demo {
        width: 90%;
        padding:10px;
        border-radius: 40px;
        background: transparent;
        display: grid;
        grid-template-columns: repeat(1, 1fr);
        gap: 40px;
    }
    .waveContainer__Demo {
        display: grid;
        align-items: center;
        grid-template-columns: auto 1fr;
    }
    .previewTitle__Demo {
        font-family: inherit;
        margin-top: 5px;
        text-align: center;
        font-size: 20px;
        color: white;
        height: 24px;
        grid-column: 1 / -1;
    }
    .fa.fa-play,
    .fa.fa-pause {
        background-color: transparent;
        border: none;
        margin-left: 0px;
        padding-left: 0px;
        padding-right: 0px;
        margin-right: 0px;
        transition: 0.1s;
    }
    .waveContainer__Demo button.fa.fa-play,
    .waveContainer__Demo button.fa.fa-pause {
        color: white;
        font-size: 25px;
    }
    .waveContainer__Demo button.fa.fa-play {
      margin-left: 3px;
    }
    .buttonContainer__Demo {
        padding: 0;
        width: 70px;
        height: 70px;
        background-color: #222;
        border-radius: 35px;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 10px;
        transition: 0.2s;
        -webkit-user-select: none;  /* WebKit/Blink Browsers */
        -moz-user-select: none;     /* Mozilla Browsers */
        -ms-user-select: none;      /* Internet Explorer/Edge Browsers */
        user-select: none; 
    }
    .buttonContainer__DemoActive {
        background-color: #1fabee;
    }
    .buttonContainer__Demo:active {
      transform: scale(0.8);
    }
    @media (max-width: 650px) {
        .fa.fa-play,
        .fa.fa-pause {
            background-color: transparent;
            font-size: 10px;
            border: none;
            padding: 0px;
            transition: 0.1s;
            width: 20px;
        }
        .fa.fa-play {
            color: #cccccc;
        }
        .fa.fa-pause {
            color: white;
        }
        .previewTitle__Demo {
            font-size: 18px;
        }

    }
</style>
<div class="waveformPreviews__Demo">
    <link
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
        rel="stylesheet"
    >
    <div class="waveforms__Demo">
        <!-- waveforms are rendered in here -->
    </div>
</div>

<script type="module">
    import WaveSurfer from "https://unpkg.com/wavesurfer.js@7/dist/wavesurfer.esm.js";
    
    const waveformsContainer = document.querySelector(".waveforms__Demo");

    function isMobileDevice() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }

    const createWaveForm = (url) => {
        const container = ".waveContainer__Demo";
  
        const waveContainer = document.createElement("div");
        waveContainer.classList.add("waveContainer__Demo");
  
        waveformsContainer.appendChild(waveContainer);

        const buttonContainer = document.createElement("button");
        buttonContainer.classList.add("buttonContainer__Demo")
  
        const playButton = document.createElement("button");
        const playButtonId =
            "play-button-" + Math.random().toString(36).substring(7);
        playButton.id = playButtonId;
        playButton.classList.add("fa");
        playButton.classList.add("fa-play");
        buttonContainer.append(playButton)
  
        waveContainer.append(buttonContainer);
  
        let isDraggable = true;
        if(isMobileDevice()) {
            isDraggable = false;
        }

        const initWaveSurfer = (isDraggable) => {
            const wavesurfer = WaveSurfer.create({
                url: url,
                container: waveContainer,
                waveColor: "#555",
                progressColor: "#1fabee",
                dragToSeek: false,
                barWidth: 2,
                barGap: 1,
                barRadius: 2,
                height: 50,
                cursorWidth: 2,
                hideScrollbar: true,
                minPxPerSec: 100,
                normalize: false,
                hideScrollbar: true,
            });
            return wavesurfer;
        }

        const wavesurfer = initWaveSurfer(isDraggable);

        wavesurfer.on('touchmove', (event) => {
            event.preventDefault();
        });

        wavesurfer.on("finish", () => {
            wavesurfer.seekTo(0);
            playButton.classList.remove("fa-pause");
            playButton.classList.add("fa-play");
            playButton.parentNode.classList.remove("buttonContainer__DemoActive");
            playButton.parentNode.classList.remove("buttonContainer__Demo");
        });
  
        buttonContainer.addEventListener("click", () => {
            waveforms.forEach((wf) => {
                if (wf !== wavesurfer) {
                    wf.pause();
                    wf.seekTo(0);
                    const button = document.getElementById(
                        wf.playButtonId
                    );
                    button.classList.remove("fa-pause");
                    button.classList.add("fa-play");
                    button.parentNode.classList.remove("buttonContainer__DemoActive");
                    button.parentNode.classList.remove("buttonContainer__Active");
                }
            });
  
            if (!wavesurfer.isPlaying()) {
                wavesurfer.play();
                playButton.classList.remove("fa-play");
                playButton.classList.add("fa-pause");
                playButton.parentNode.classList.add("buttonContainer__DemoActive");
            } else {
                wavesurfer.pause();
                playButton.classList.remove("fa-pause");
                playButton.classList.add("fa-play");
            }
        });
  
        wavesurfer.on('interaction', () => {
            waveforms.forEach((wf) => {
                if (wf !== wavesurfer) {
                    wf.pause();
                    wf.seekTo(0);
                    const button = document.getElementById(
                        wf.playButtonId
                    );
                    button.classList.remove("fa-pause");
                    button.classList.add("fa-play");
                    button.parentNode.classList.remove("buttonContainer__DemoActive");
                    button.parentNode.classList.remove("buttonContainer__Active");
                }
            });
            if (wavesurfer.getCurrentTime() > 0) {
                buttonContainer.classList.add("buttonContainer__DemoActive");
            } else {
                buttonContainer.classList.remove("buttonContainer__DemoActive");
            }
        })
  
        const previewTitle = document.createElement("p");
        previewTitle.classList.add("previewTitle__Demo");
  
        const fileName = url.split("/").pop();
        const previewNameUnderscores = fileName.split('.')[0];
        const previewName = previewNameUnderscores.replaceAll("_", " ");
      
        previewTitle.innerText = previewName;
        waveContainer.append(previewTitle);
  
        waveforms.push(wavesurfer);
        wavesurfer.playButtonId = playButtonId;
    };
  
    createWaveForm("https://cdn.shopify.com/s/files/1/0269/7668/2056/files/Demo_Track_-_Chill_House.wav");
    createWaveForm("https://cdn.shopify.com/s/files/1/0269/7668/2056/files/Demo_Track_-_Melodic_Techno.wav");
    createWaveForm("https://cdn.shopify.com/s/files/1/0269/7668/2056/files/Demo_Track_-_Tech_House.wav");
</script>
{% endraw %}
